@model Calories_Life_2.ViewModels.LoginViewModel
@{
    ViewBag.Title = "- Login";
}

<main>
    <div class="container pt-5 mt-5">
        <div class="row justify-content-center">
            <section id="loginForm" class="site-border">
                @using (Html.BeginForm("Login", "Account", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <h2 style="color:#5e594a;">Log to your account</h2>
                    <hr />
                    <div id="login-error">
                        @Html.ValidationMessage("loginError", "", new { @class = "text-danger" })
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="col form-group align-items-center">
                        <div>@Html.LabelFor(o => o.Email)</div>
                        <div>
                            @Html.TextBoxFor(o => o.Email, new { @class = "form-control", placeholder = "Enter Email" })
                            @Html.ValidationMessageFor(o => o.Email, "", new { @class = "text-danger" })
                            <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
                        </div>
                    </div>

                    <div class="col form-group align-items-center">
                        <div>@Html.LabelFor(o => o.Password)</div>
                        <div>
                            @Html.PasswordFor(o => o.Password, new { @class = "form-control", placeholder = "Password" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col ml-4 form-check align-items-center">
                        @Html.CheckBoxFor(o => o.RememberMe, new { @class = "form-check-input", @checked = "checked" })
                        @Html.LabelFor(o => o.RememberMe)
                    </div>
                    <hr />
                    <div class="col align-items-center form-group text-center">
                        <button type="submit" class="btn site-button" value="Log in">Log In</button>
                        <p>
                            @Html.ActionLink("Not have account yet? Sign up!", "Register")
                        </p>
                    </div>

                }

                <div class="form-group text-center">
                    @using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = ViewBag.returnUrl, registerOrLogin = "login" }))
                            {
                                @Html.AntiForgeryToken();
                                <div class="pt-2">
                                    <button type="submit" id="FacebookLoginButton" name="provider" class="btn d-inline-block" title="Log in using your Facebook"
                                            value="Facebook"></button>
                                    <button type="submit" id="GoogleLoginButton" name="provider" class="btn d-inline-block" title="Log in using your Google"
                                            value="Google"></button>
                                </div>
                    }
                </div>
            </section>
        </div>
    </div>
</main>
@section ScriptsBottom {
@Scripts.Render("~/bundles/jqueryval")
}